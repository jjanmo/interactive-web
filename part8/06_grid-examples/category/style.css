* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  background-color: #eee;
}

.app {
  width: 100%;
  max-width: 1200px;
  margin: auto;

  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 1em;
}

label {
  padding: 0.5em 1em;
  font-size: 1.5rem;
  text-transform: uppercase;
  cursor: pointer;
}
input:checked + label {
  background-color: #485460;
  color: white;
}
input[name='checkbox'] {
  display: none;
}

.header {
  grid-column: 1 / 5;

  /* 
  grid-row를 지정하게 되면 grid-auto-flow row dense가 발동하는 것처럼 보임.
  그래서 다른 곳들도 다 지정을 해줘야 하는 것 
  → 지정을 안하면 순서대로 들어가다가 들어갈 자리가 없으면 알아서 다음 row로 배치되는 것
  */
  /* grid-row: 2; */
  font-size: 5rem;
  color: #808e9b;
}

.card {
  background-color: white;
}
.card-category {
  padding: 0.5em 1em;
  font-size: 1.3rem;
  text-transform: capitalize;
}
.card-header {
  font-size: 1.5rem;
  padding: 0.5em;
}
.card-body {
  padding: 0 1em 1em;
}

.typescript .card-category {
  color: white;
  background-color: #3c40c6;
}
.java .card-category {
  color: white;
  background-color: #ff5e57;
}
.python .card-category {
  color: white;
  background-color: #ffd32a;
}
.c-sharp .card-category {
  color: white;
  background-color: #00d8d6;
}

.footer {
  grid-column: 1 / 5;

  margin-top: 1em;
  padding: 1em 2em;
  background-color: #808e9b;
  text-align: center;
}

/* 
css logic
→ 사실 js로 하는 것이 맞다고 생각함 
→ css로도 할 수 있음을 인지하자!
*/

#category:checked ~ .java {
  grid-row: 3/4;
}
#category:checked ~ .card.python {
  grid-row: 4 / 5;
}
#category:checked ~ .card.typescript {
  grid-row: 5 / 6;
}
#category:checked ~ .card.c-sharp {
  grid-row: 6 / 7;
}
